{
  "name": "Swift-apns",
  "tagline": "Swift Framework for sending Apple Push Notification over HTTP/2 API",
  "body": "<p align=\"center\">\r\n  <a href=\"\">\r\n    <img alt=\"Logo\" src=\"https://raw.githubusercontent.com/alexeyxo/swift-apns/master/logo.png\" width=\"500px\">\r\n  </a>\r\n</p>\r\n\r\n<p align=\"center\">\r\n   Simple framework for sending Apple Push Notifications.\r\n</p>\r\n\r\n<p align=\"center\">\r\n\r\n  <a href=\"https://github.com/Carthage/Carthage\"><img alt=\"Carthage compatible\" src=\"https://img.shields.io/badge/Carthage-compatible-4BC51D.svg?style=flat\"></a>\r\n\r\n  <a href=\"http://cocoapods.org/?q=APNS\"><img alt=\"Version\" src=\"http://img.shields.io/cocoapods/v/APNS.svg\"></a>\r\n\r\n  <a href=\"http://cocoapods.org/?q=APNS\"><img alt=\"Platform\" src=\"http://img.shields.io/cocoapods/p/APNS.svg\"></a>\r\n\r\n</p>\r\n\r\n## Table of Contents\r\n\r\n- [Installation](#installation)\r\n  - [CocoaPods](#-cocoapods)\r\n  - [Carthage](#-carthage)\r\n- [Usage](#usage)\r\n  - [Simple Example](#simple-example)\r\n  - [Using with \"Protocol Buffers\"](#using-with-protocol-buffers)\r\n    - [Simple Example](#simple-example-1)\r\n    - [Sending Custom Objects](#sending-custom-objects)\r\n- [Credits](#credits)\r\n\r\n## Installation\r\n\r\n### <img src=\"https://avatars3.githubusercontent.com/u/1189714\" width=\"22\" height=\"22\"> CocoaPods\r\n\r\n[CocoaPods](http://cocoapods.org) is a dependency manager for Cocoa projects. You can install it with the following command:\r\n\r\n```bash\r\n$ gem install cocoapods\r\n```\r\n\r\nTo integrate *swift-apns* into your Xcode project using CocoaPods, specify it in your `Podfile`:\r\n\r\n```ruby\r\nsource 'https://github.com/CocoaPods/Specs.git'\r\nplatform :ios, '9.0'\r\nuse_frameworks!\r\n\r\ntarget '<Your Target Name>' do\r\n    pod 'APNS', '~> 1.0'\r\nend\r\n```\r\n\r\nThen, run the following command:\r\n\r\n```bash\r\n$ pod install\r\n```\r\n\r\n### <img src=\"https://cloud.githubusercontent.com/assets/432536/5252404/443d64f4-7952-11e4-9d26-fc5cc664cb61.png\" width=\"22\" height=\"22\"> Carthage\r\n\r\n[Carthage](https://github.com/Carthage/Carthage) is a decentralized dependency manager that builds your dependencies and provides you with binary frameworks.\r\n\r\nYou can install Carthage with [Homebrew](http://brew.sh/) using the following command:\r\n\r\n```bash\r\n$ brew install carthage\r\n```\r\n\r\nTo integrate *swift-apns* into your Xcode project using Carthage, specify it in your `Cartfile`:\r\n\r\n```ogdl\r\ngithub \"alexeyxo/swift-apns\"\r\n```\r\n\r\nRun `carthage update` to build the framework and drag the built `.framework` file into your Xcode project.\r\n\r\n\r\n## Usage\r\n\r\n### Simple Example\r\n\r\n```swift\r\nlet aps = [\"sound\":\"default\", \"alert\":\"testPush()\"]\r\nlet payload = [\"aps\":aps]\r\ntry! APNSNetwork().sendPush(\"com.myapp.bundle\",\r\n        priority: 10,\r\n        payload: payload,\r\n        deviceToken: \"3dd55a59056441ab275b8b679458388cae76be3a9a02a00234388e50fe91f2fe\",\r\n        certificatePath: NSBundle.mainBundle().pathForResource(\"push\", ofType: \"p12\")!,\r\n        passphrase: \"123456\",\r\n        sandbox: true) { (response) -> Void in\r\n\r\n        }\r\n```\r\n\r\n### Using with \"Protocol Buffers\"\r\n\r\n> Required Protocol Buffers 3.0 and [protobuf-swift](https://github.com/alexeyxo/protobuf-swift).\r\n\r\n#### Simple Example\r\n```swift\r\nlet providerData = Apple.Apns.ProviderData.Builder()\r\nproviderData.bundle = \"com.advisa.voipservice\"\r\nproviderData.serviceIdentity = Apple.Apns.ProviderData.Identity.Development\r\nproviderData.priority = 10\r\nproviderData.certificatePath = NSBundle(forClass:UnitTest.self).pathForResource(\"push\", ofType: \"p12\")!\r\nproviderData.certificatePassphrase = \"123456\"\r\nproviderData.token = \"3dd55a59056441ab275b8b679458388cae76be3a9a02a00234388e50fe91f2fe\"\r\n\r\nlet aps = Apple.Apns.Push.Aps.Builder()\r\naps.badge = 1\r\naps.contentAvailable = 1\r\naps.sound = \"default\"\r\naps.alert = \"testSendProtobuf()\"\r\ndo {\r\n    let payload = try Apple.Apns.Push.Builder().setAps(aps.build()).build()\r\n    providerData.payload = payload\r\n    try APNSNetwork().sendPush(providerData.build(), responseBlock: { (response) -> () in\r\n        print(response)\r\n    })\r\n} catch {\r\n\r\n}\r\n```\r\n\r\n#### Sending Custom Objects\r\n\r\n1. Edit ./Source/ProtoSource/PushService.proto:\r\n  ```protobuf\r\n  ...\r\n  message Push {\r\n      message Aps {\r\n          string alert = 1;\r\n          string sound = 2;\r\n          int32 badge = 3;\r\n          int32 content_available = 4;\r\n          string category = 5;\r\n      }\r\n\r\n      message ExampleCustomObject {\r\n          string objectId = 1;\r\n      }\r\n\r\n    Aps aps = 1;\r\n      ExampleCustomObject customObject = 2;\r\n  }\r\n  ```\r\n\r\n2. Compile new object:\r\n  ```bash\r\n  protoc PushService.proto --swift_out=\"../\"\r\n  ```\r\n\r\n## Credits\r\n\r\n- The bird used in the logo - as well as the cloud - are borrowed respectively\r\nfrom the original *Swift* and *APNs* logos which have\r\n*All Rights Reserved to Apple Inc.\r\n\r\n- The font used in logo comes from the [San Francisco family](https://developer.apple.com/fonts/).\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}